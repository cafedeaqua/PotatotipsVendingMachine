language: java
jdk:
#  - openjdk7
  - oraclejdk7
#  - openjdk6

notifications:
  email: true

notifications:
  webhooks:
    - https://idobata.io/hook/22ff3a1b-28ad-49e9-8fda-3cfc8493f32a

env:
  global:
  # for coverall repo_token
    - secure: BaXpPo2X+gPhObp2JH+n6xz0SHUt82wtcdjYObNuvrnqGE9PdtH3reBkMBxUoSJlT4OgecX4zt0Rkm8+Dzm7tyrvFis5DxSnT06ZkxPNxxcOeSz+kqvTdDiGLX/FpX5Gvwlk5h/GtxQZMFXp3fT2d2SR3cJRJmzOCChVwKsjyYc=
   # The next declration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
    - secure: "qYMMVekEh7QlCKO0QY8/3DP4q2nYjarb4qo8/fn+jUDudO3S1ZK5oVjpLVEk1+DQMKYb8Idyh6eobWrcnaNvfLtA8tZbOt0ByCp6tDCXiKLSTccQR1amY50Luh3XVA5mRdeWFuPL3LzJl8/pR/rjx8vZvPS3Fo3swlYeKzhNaAg="
  matrix:
    - ANDROID_TARGET=android-19  ANDROID_SDKS=android-19,build-tools-19.0.3,sysimg-19 ANDROID_BUILD_TOOLS_VERSION=19.0.3 ANDROID_ABI=armeabi-v7a
#    - ANDROID_TARGET=android-19  ANDROID_SDKS=android-19,build-tools-19.0.3,sysimg-19 ANDROID_BUILD_TOOLS_VERSION=19.0.3 ANDROID_ABI=x86
#    - ANDROID_TARGET=android-19  ANDROID_SDKS=android-19,build-tools-19.0.3,addon-google_apis-google-19 ANDROID_BUILD_TOOLS_VERSION=19.0.3 ANDROID_ABI=armeabi-v7a
#    - ANDROID_TARGET=android-19  ANDROID_SDKS=android-19,build-tools-19.0.3,addon-google_apis_x86-google-19 ANDROID_BUILD_TOOLS_VERSION=19.0.3 ANDROID_ABI=x86
before_install:
    # Install base Android SDK
    - sudo apt-get update -qq
    - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch; fi
    - wget https://dl.google.com/android/android-sdk_r22.3-linux.tgz
    - tar xzf android-sdk_r22.3-linux.tgz
#    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export ANDROID_HOME=`pwd`/android-sdk-linux
    - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/build-tools/$ANDROID_BUILD_TOOLS_VERSION

    
    # Install required Android components.
    - android list sdk --extended
    - android list target
    - android list sdk --extended -a

    # Do you accept the license 'android-sdk-license-bcbbd656' [y/n]:
    - echo y | android update sdk --filter platform-tool,extra-android-support,${ANDROID_SDKS} --no-ui --force

    # PROVISIONAL: changed SDKr22 build-tools path. create symbolic link
#    - if [ ! -e ${ANDROID_HOME}/platform-tools/aapt ]; then ln -s ${ANDROID_HOME}/build-tools/$ANDROID_BUILD_TOOLS_VERSION/aapt ${ANDROID_HOME}/platform-tools/aapt; fi
#    - if [ ! -e ${ANDROID_HOME}/platform-tools/aidl ]; then ln -s ${ANDROID_HOME}/build-tools/$ANDROID_BUILD_TOOLS_VERSION/aidl ${ANDROID_HOME}/platform-tools/aidl; fi

    # Create and start emulator
    - export AVD_NAME=test
    - echo no | android create avd --force -n ${AVD_NAME} -t ${ANDROID_TARGET} --abi ${ANDROID_ABI}
    - emulator -avd ${AVD_NAME} -no-skin -no-audio -no-window &

before_script:
    # Make sure the emulator has started before running tests
    - chmod +x ./wait_for_emulator
    - ./wait_for_emulator
#    - adb wait-for-device 

addons:
  coverity_scan:
    project:
      name: "cafedeaqua/PotatotipsVendingMachine"
      description: "Your project description here"
    notification_email: cafedeaqua@gmail.com
    build_command_prepend: ant -f build.xml emma debug install
    build_command: ant -f tests/build.xml emma debug install test
    branch_pattern: coverity_scan

script:
 - ant -f build.xml emma debug install
 - ant -f tests/build.xml emma debug install test
 - adb shell am instrument -e coverage true -w com.andbrowser.potatotipsvendingmachine.test/android.test.InstrumentationTestRunner
 - adb pull /data/data/com.andbrowser.potatotipsvendingmachine/files/coverage.ec .
 - ant -f build.xml clean emma debug
 - ant -f tests/build.xml clean emma debug
 - cp bin/coverage.em .
 - ls -la .
#  - adb pull /data/data/com.andbrowser.potatotipsvendingmachine/files/coverage.ec .
# - echo yes | git clone git@github.com:cafedeaqua/coverallsemma.git
# - ant -f coverallsemma/build.xmlc
# - ls -la coverallsemma/build/emmacoveralls.jar
 - export SERVICE_NAME=travis-ci
# - java -cp emmacoveralls.jar emma report -r coveralls -in coverage.em,coverage.ec  -sp src/ -Dreport.coveralls.service.name=$SERVICE_NAME -Dreport.coveralls.repotoken=$COVERALLS_REPO_TOKEN
 - java -cp emmacoveralls.jar emma report -r coveralls -in bin/coverage.em,coverage.ec  -sp src/ -Dreport.coveralls.service.name=$SERVICE_NAME -Dreport.coveralls.repotoken=$COVERALLS_REPO_TOKEN -Dreport.coveralls.service.jobid=${TRAVIS_BUILD_ID}
 - ls -la .
 - cat coverage.json
 - curl --form 'json_file=@coverage.json' https://coveralls.io/api/v1/jobs
 
